# ==========================================================================
# RENDER ENVIRONMENT VARIABLES CONFIGURATION
# ==========================================================================
# 
# IMPORTANT: These variables need to be added manually in the Render dashboard
# Go to your service → Environment tab → Add each variable individually
#
# DO NOT upload this file to your repository - it contains sensitive data!
# ==========================================================================

# ==========================================================================
# REQUIRED VARIABLES (Must be set)
# ==========================================================================

# Flask Secret Key - Auto-generated by Render (already in render.yaml)
# SECRET_KEY=<auto-generated-by-render>

# Database URL - Auto-linked from PostgreSQL service (already in render.yaml)  
# DATABASE_URL=<auto-linked-from-render-postgresql>

# ==========================================================================
# VAPID KEYS FOR PUSH NOTIFICATIONS (Add manually in Render dashboard)
# ==========================================================================

VAPID_PRIVATE_KEY=LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ3p5ZDRIOCt6eDZFRUQ5TDMKUkRTZ3E0S1p2NEFQWTJ3SmE5QUhPK3Jmd2wyaFJBTkNBQVQzdmdHWXpDcUQ4VnovRkh4V3BRQ1NYZUhPNnVqSQp3VXB2aTk2L3d6OXJQRkJZSzhDWGd4YzZKZ0ZXdlFaQ2JPb2gvNHhROGR0WTNIN1o4cjU0dlJvWQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==

VAPID_PUBLIC_KEY=LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFOTc0Qm1Nd3FnL0ZjL3hSOFZxVUFrbDNoenVybwp5TUZLYjR2ZXY4TS9henhRV0N2QWw0TVhPaVlCVnIwR1FtenFJZitNVVBIYldOeCsyZksrZUwwYUdBPT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==

VAPID_CLAIMS_SUB=mailto:admin@yourdomain.com

# ==========================================================================
# OPTIONAL PERFORMANCE/CONFIGURATION VARIABLES
# ==========================================================================

# Python version (already set in render.yaml)
# PYTHON_VERSION=3.11.0

# Flask configuration (already set in render.yaml)
# FLASK_APP=app.py
# FLASK_ENV=production
# FLASK_DEBUG=false

# Gunicorn/Worker configuration (already set in render.yaml)
# WEB_CONCURRENCY=1

# ==========================================================================
# OPTIONAL ADVANCED DATABASE SETTINGS (if needed)
# ==========================================================================

# Override default database pool size (optional)
# SQLALCHEMY_POOL_SIZE=5

# Override connection timeout (optional)
# SQLALCHEMY_POOL_TIMEOUT=20

# Override pool recycle time (optional)
# SQLALCHEMY_POOL_RECYCLE=300

# ==========================================================================
# OPTIONAL APPLICATION SETTINGS (customize as needed)
# ==========================================================================

# Default player budget (optional - uses config default if not set)
# INITIAL_BALANCE=15000

# Minimum bid amount (optional - uses config default if not set)
# MINIMUM_BID=10

# Maximum players per team (optional - uses config default if not set)
# MAX_PLAYERS_PER_TEAM=25

# ==========================================================================
# EMAIL CONFIGURATION (if you want to add email features later)
# ==========================================================================

# SMTP settings for password reset emails (optional)
# MAIL_SERVER=smtp.gmail.com
# MAIL_PORT=587
# MAIL_USE_TLS=true
# MAIL_USERNAME=your-email@gmail.com
# MAIL_PASSWORD=your-app-password

# ==========================================================================
# REDIS CONFIGURATION (if you want to add caching later)
# ==========================================================================

# Redis URL for caching/session storage (optional)
# REDIS_URL=redis://localhost:6379/0

# ==========================================================================
# LOGGING CONFIGURATION (optional)
# ==========================================================================

# Log level for production (optional)
# LOG_LEVEL=INFO

# Enable detailed SQL logging (optional - use for debugging only)
# SQLALCHEMY_ECHO=false
